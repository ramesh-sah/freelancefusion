# Generated by Django 5.1.6 on 2025-02-20 18:10

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('user_type', models.CharField(choices=[('freelancer', 'Freelancer'), ('employer', 'Employer'), ('admin', 'Admin')], max_length=50)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='banner_images/')),
                ('tag_line', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('full_name', models.CharField(max_length=255)),
                ('professional_title', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone_info', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('professional_summary', models.TextField(blank=True, help_text='Brief summary of your professional experience (max 1000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(1000)])),
                ('key_achievements', models.TextField(blank=True, help_text='Key achievements in your career (max 1000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(1000)])),
                ('core_competencies', models.TextField(blank=True, help_text='List main competencies separated by commas (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('technical_skills', models.TextField(blank=True, help_text='List technical skills (e.g., Python, Django, React) separated by commas (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('soft_skills', models.TextField(blank=True, help_text='List soft skills (e.g., communication, teamwork) separated by commas (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('industry_specific_skills', models.TextField(blank=True, help_text='List niche-specific skills relevant to your industry (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('work_experience', models.TextField(blank=True, help_text='Detailed overview of past roles, projects, and client feedback (max 3000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(3000)])),
                ('education', models.TextField(blank=True, help_text='Academic degrees, relevant courses, and continuing education details (max 2000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(2000)])),
                ('certifications', models.TextField(blank=True, help_text='Certifications and licenses including dates and issuing organizations (max 1000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(1000)])),
                ('portfolio_projects', models.TextField(blank=True, help_text='Details and links to featured projects or case studies (max 3000 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(3000)])),
                ('awards', models.TextField(blank=True, help_text='Industry awards and recognitions that boost credibility (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('professional_affiliations', models.TextField(blank=True, help_text='Memberships, associations, or volunteer roles (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('languages', models.TextField(blank=True, help_text='Languages you speak and proficiency levels (max 250 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('interests', models.TextField(blank=True, help_text='Optional hobbies or interests (max 250 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('references', models.TextField(blank=True, help_text='References or client endorsements (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('services_offered', models.TextField(blank=True, help_text='List the freelance services you provide (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('rates_packages', models.TextField(blank=True, help_text='Hourly rates or package details (max 250 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('availability', models.TextField(blank=True, help_text='Current availability or preferred working hours (max 250 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('client_success_metrics', models.TextField(blank=True, help_text='Quantitative results and success stories (max 250 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(250)])),
                ('verified', models.BooleanField(default=False, help_text='Indicates if the user has been verified.')),
                ('resume_file', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('hourly_rate_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('experience_level', models.CharField(blank=True, choices=[('entry', 'Entry Level'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], max_length=50, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('current_company', models.CharField(blank=True, max_length=255, null=True)),
                ('current_position', models.CharField(blank=True, max_length=255, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('specializations', models.TextField(blank=True, help_text='Your areas of specialization (max 500 characters).', null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('client_rating', models.DecimalField(blank=True, decimal_places=2, help_text='Client rating out of 5 (e.g., 4.75).', max_digits=3, null=True)),
                ('completed_projects', models.PositiveIntegerField(blank=True, help_text='Number of completed projects.', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
