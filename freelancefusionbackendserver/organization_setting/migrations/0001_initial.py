# Generated by Django 5.1.6 on 2025-02-20 20:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Organization Name')),
                ('about_us', models.TextField(blank=True, help_text='Description about the organization', max_length=2000, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, max_length=2000, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organization_logos/')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('privacy_policy', models.TextField(blank=True, max_length=2000, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('organization_type', models.CharField(blank=True, choices=[('nonprofit', 'Nonprofit'), ('corporation', 'Corporation'), ('startup', 'Startup')], max_length=50, null=True)),
                ('mission_statement', models.TextField(blank=True, max_length=1000, null=True)),
                ('vision_statement', models.TextField(blank=True, max_length=1000, null=True)),
                ('founding_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900)])),
                ('registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('vat_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_preference', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('none', 'None')], default='email', max_length=50)),
                ('payment_terms', models.TextField(blank=True, max_length=2000, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('invoice_template', models.FileField(blank=True, null=True, upload_to='invoice_templates/')),
                ('default_language', models.CharField(default='en', max_length=50)),
                ('supported_languages', models.JSONField(blank=True, null=True)),
                ('operational_region', models.CharField(blank=True, max_length=255, null=True)),
                ('legal_compliance', models.TextField(blank=True, max_length=3000, null=True)),
                ('insurance_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('business_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('customer_support_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_support_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('theme_color', models.CharField(blank=True, help_text='Hex color code for theme', max_length=7, null=True)),
                ('branding_font', models.CharField(blank=True, max_length=255, null=True)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='banners/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='favicons/')),
                ('tax_exemption_status', models.BooleanField(default=False)),
                ('legal_address', models.CharField(blank=True, max_length=500, null=True)),
                ('tax_registration_number', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_preferences', models.JSONField(blank=True, null=True)),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('sms_notifications_enabled', models.BooleanField(default=False)),
                ('subscription_plan', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_expiration_date', models.DateField(blank=True, null=True)),
                ('billing_address', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_gateway_info', models.JSONField(blank=True, null=True)),
                ('two_factor_authentication_enabled', models.BooleanField(default=False)),
                ('password_expiry_days', models.PositiveIntegerField(default=90)),
                ('employee_count', models.PositiveIntegerField(blank=True, null=True)),
                ('vacation_policy', models.TextField(blank=True, null=True)),
                ('employee_benefits', models.TextField(blank=True, null=True)),
                ('organizational_structure', models.JSONField(blank=True, null=True)),
                ('internal_comms_tool', models.CharField(blank=True, max_length=255, null=True)),
                ('project_management_tool', models.CharField(blank=True, max_length=255, null=True)),
                ('task_automation_tools', models.JSONField(blank=True, null=True)),
                ('default_time_zone', models.CharField(default='UTC', max_length=50)),
                ('date_format', models.CharField(default='MM/DD/YYYY', max_length=50)),
                ('currency_symbol', models.CharField(blank=True, max_length=5, null=True)),
                ('integration_with_crm', models.BooleanField(default=False)),
                ('integration_with_marketing_tools', models.BooleanField(default=False)),
                ('api_key_for_integrations', models.CharField(blank=True, max_length=255, null=True)),
                ('compliance_documents', models.FileField(blank=True, null=True, upload_to='compliance_docs/')),
                ('audit_log_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FreelanceOrganizationSetting',
            fields=[
                ('organizationsetting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='organization_setting.organizationsetting')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Average rating out of 5', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('number_of_reviews', models.PositiveIntegerField(default=0, help_text='Total number of reviews received')),
                ('project_categories', models.JSONField(blank=True, help_text='List of project categories offered', null=True)),
                ('verified_freelancers', models.BooleanField(default=False, help_text='Indicates if the organization has verified freelancers')),
                ('membership_level', models.CharField(choices=[('basic', 'Basic'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='basic', help_text='Membership level for the organization', max_length=50)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Commission rate (%) for freelance transactions', max_digits=5)),
                ('escrow_enabled', models.BooleanField(default=True, help_text='Enable escrow services for secure payments')),
                ('dispute_resolution_policy', models.TextField(blank=True, help_text='Policy details for dispute resolution', max_length=3000, null=True)),
                ('portfolio_link', models.URLField(blank=True, help_text="Link to the organization's portfolio or showcase", null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
            bases=('organization_setting.organizationsetting',),
        ),
    ]
